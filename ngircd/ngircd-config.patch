diff --git a/doc/sample-ngircd.conf.tmpl b/doc/sample-ngircd.conf.tmpl
index 7905da48..55ec9bbb 100644
--- a/doc/sample-ngircd.conf.tmpl
+++ b/doc/sample-ngircd.conf.tmpl
@@ -25,13 +25,13 @@
 
 	# Server name in the IRC network, must contain at least one dot
 	# (".") and be unique in the IRC network. Required!
-	Name = irc.example.net
+	Name = ngircd.example.irc.com
 
 	# Information about the server and the administrator, used by the
 	# ADMIN command. Not required by server but by RFC!
-	;AdminInfo1 = Description
-	;AdminInfo2 = Location
-	;AdminEMail = admin@irc.server
+	AdminInfo1 = Dan
+	AdminInfo2 = Admin
+	AdminEMail = daniel@example.com
 
 	# Text file which contains the ngIRCd help text. This file is required
 	# to display help texts when using the "HELP <cmd>" command.
@@ -39,7 +39,7 @@
 
 	# Info text of the server. This will be shown by WHOIS and
 	# LINKS requests for example.
-	Info = Server Info Text
+	Info = Client Server
 
 	# Comma separated list of IP addresses on which the server should
 	# listen. Default values are:
@@ -49,7 +49,7 @@
 
 	# Text file with the "message of the day" (MOTD). This message will
 	# be shown to all users connecting to the server:
-	;MotdFile = :ETCDIR:/ngircd.motd
+	MotdFile = :ETCDIR:/ngircd.motd
 
 	# A simple Phrase (<127 chars) if you don't want to use a motd file.
 	;MotdPhrase = "Hello world!"
@@ -58,7 +58,7 @@
 	# is optional, should only contain ASCII characters, and can't contain
 	# spaces. It is only used to inform clients. The default is empty,
 	# so no network name is announced to clients.
-	;Network = aIRCnetwork
+	Network = ExampleNet
 
 	# Global password for all users needed to connect to the server.
 	# (Default: not set)
@@ -72,7 +72,7 @@
 
 	# Ports on which the server should listen. There may be more than
 	# one port, separated with ",". (Default: 6667)
-	;Ports = 6667, 6668, 6669
+	Ports = 4445
 
 	# Group ID under which the ngIRCd should run; you can use the name
 	# of the group or the numerical ID. ATTENTION: For this to work the
@@ -103,14 +103,14 @@
 
 	# Maximum number of simultaneous in- and outbound connections the
 	# server is allowed to accept (0: unlimited):
-	;MaxConnections = 0
+	MaxConnections = 0
 
 	# Maximum number of simultaneous connections from a single IP address
 	# the server will accept (0: unlimited):
-	;MaxConnectionsIP = 5
+	MaxConnectionsIP = 0
 
 	# Maximum number of channels a user can be member of (0: no limit):
-	;MaxJoins = 10
+	MaxJoins = 50
 
 	# Maximum length of an user nickname (Default: 9, as in RFC 2812).
 	# Please note that all servers in an IRC network MUST use the same
@@ -183,12 +183,12 @@
 	;DefaultUserModes = i
 
 	# Do DNS lookups when a client connects to the server.
-	;DNS = yes
+	DNS = no
 
 	# Do IDENT lookups if ngIRCd has been compiled with support for it.
 	# Users identified using IDENT are registered without the "~" character
 	# prepended to their user name.
-	;Ident = yes
+	Ident = no
 
 	# Directory containing configuration snippets (*.conf), that should
 	# be read in after parsing this configuration file.
@@ -217,7 +217,7 @@
 	# Use PAM if ngIRCd has been compiled with support for it.
 	# Users identified using PAM are registered without the "~" character
 	# prepended to their user name.
-	;PAM = yes
+	PAM = no
 
 	# When PAM is enabled, all clients are required to be authenticated
 	# using PAM; connecting to the server without successful PAM
@@ -261,13 +261,13 @@
 	# be used. (Default: not set)
 	;WebircPassword = xyz
 
-;[SSL]
+[SSL]
 	# SSL-related configuration options. Please note that this section
 	# is only available when ngIRCd is compiled with support for SSL!
 	# So don't forget to remove the ";" above if this is the case ...
 
 	# SSL Server Key Certificate
-	;CertFile = :ETCDIR:/ssl/server-cert.pem
+	CertFile = :ETCDIR:/ssl/server-cert.pem
 
 	# Select cipher suites allowed for SSL/TLS connections. This defaults
 	# to HIGH:!aNULL:@STRENGTH (OpenSSL) or SECURE128 (GnuTLS).
@@ -276,129 +276,32 @@
 	# For OpenSSL:
 	;CipherList = HIGH:!aNULL:@STRENGTH:!SSLv3
 	# For GnuTLS:
-	;CipherList = SECURE128:-VERS-SSL3.0
+	CipherList = SECURE128:-VERS-SSL3.0
 
 	# Diffie-Hellman parameters
 	;DHFile = :ETCDIR:/ssl/dhparams.pem
 
 	# SSL Server Key
-	;KeyFile = :ETCDIR:/ssl/server-key.pem
+	KeyFile = :ETCDIR:/ssl/server-key.pem
 
 	# password to decrypt SSLKeyFile (OpenSSL only)
 	;KeyFilePassword = secret
 
 	# Additional Listen Ports that expect SSL/TLS encrypted connections
-	;Ports = 6697, 9999
+	Ports = 5555
 
 [Operator]
 	# [Operator] sections are used to define IRC Operators. There may be
 	# more than one [Operator] block, one for each local operator.
 
 	# ID of the operator (may be different of the nickname)
-	;Name = TheOper
+	Name = alice
 
 	# Password of the IRC operator
-	;Password = ThePwd
-
-	# Optional Mask from which /OPER will be accepted
-	;Mask = *!ident@somewhere.example.com
+	Password = password
 
 [Operator]
-	# More [Operator] sections, if you like ...
-
-[Server]
-	# Other servers are configured in [Server] sections. If you
-	# configure a port for the connection, then this ngircd tries to
-	# connect to to the other server on the given port; if not it waits
-	# for the other server to connect.
-	# There may be more than one server block, one for each server.
-	#
-	# Server Groups:
-	# The ngIRCd allows "server groups": You can assign an "ID" to every
-	# server with which you want this ngIRCd to link. If a server of a
-	# group won't answer, the ngIRCd tries to connect to the next server
-	# in the given group. But the ngircd never tries to connect to two
-	# servers with the same group ID.
-
-	# IRC name of the remote server, must match the "Name" variable in
-	# the [Global] section of the other server (when using ngIRCd).
-	;Name = irc2.example.net
-
-	# Internet host name or IP address of the peer (only required when
-	# this server should establish the connection).
-	;Host = connect-to-host.example.net
-
-	# IP address to use as _source_ address for the connection. if
-	# unspecified, ngircd will let the operating system pick an address.
-	;Bind = 10.0.0.1
-
-	# Port of the server to which the ngIRCd should connect. If you
-	# assign no port the ngIRCd waits for incoming connections.
-	;Port = 6667
-
-	# Own password for the connection. This password has to be configured
-	# as "PeerPassword" on the other server.
-	;MyPassword = MySecret
-
-	# Foreign password for this connection. This password has to be
-	# configured as "MyPassword" on the other server.
-	;PeerPassword = PeerSecret
-
-	# Group of this server (optional)
-	;Group = 123
-
-	# Set the "Passive" option to "yes" if you don't want this ngIRCd to
-	# connect to the configured peer (same as leaving the "Port" variable
-	# empty). The advantage of this option is that you can actually
-	# configure a port an use the IRC command CONNECT more easily to
-	# manually connect this specific server later.
-	;Passive = no
-
-	# Connect to the remote server using TLS/SSL (Default: false)
-	;SSLConnect = yes
-
-	# Define a (case insensitive) list of masks matching nicknames that
-	# should be treated as IRC services when introduced via this remote
-	# server, separated by commas (",").
-	# REGULAR SERVERS DON'T NEED this parameter, so leave it empty
-	# (which is the default).
-	# When you are connecting IRC services which mask as a IRC server
-	# and which use "virtual users" to communicate with, for example
-	# "NickServ" and "ChanServ", you should set this parameter to
-	# something like "*Serv" or "NickServ,ChanServ,XyzServ".
-	;ServiceMask = *Serv,Global
-
-[Server]
-	# More [Server] sections, if you like ...
-
-[Channel]
-	# Pre-defined channels can be configured in [Channel] sections.
-	# Such channels are created by the server when starting up and even
-	# persist when there are no more members left.
-	# Persistent channels are marked with the mode 'P', which can be set
-	# and unset by IRC operators like other modes on the fly.
-	# There may be more than one [Channel] block, one for each channel.
-
-	# Name of the channel
-	;Name = #TheName
-
-	# Topic for this channel
-	;Topic = a great topic
-
-	# Initial channel modes
-	;Modes = tnk
-
-	# initial channel password (mode k)
-	;Key = Secret
-
-	# Key file, syntax for each line: "<user>:<nick>:<key>".
-	# Default: none.
-	;KeyFile = :ETCDIR:/#chan.key
-
-	# maximum users per channel (mode l)
-	;MaxUsers = 23
-
-[Channel]
-	# More [Channel] sections, if you like ...
+	Name = daniel
+	Password = password
 
 # -eof-
